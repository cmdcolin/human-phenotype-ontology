name: Post Markdown Comment on Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  post-comment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install oaklib
      run: pip install git+https://github.com/INCATools/ontology-access-kit.git@release-notes-emit

    - name: Run make diff-md
      run: |
        cd src/ontology
        make diff-md

    # Check if reports/difference_md.md exists
    - name: Check for difference_md.md
      id: check-file
      run: |
        if [ -f src/ontology/reports/difference_md.md ]; then
          echo "DIFF_MD_EXISTS=true" >> $GITHUB_ENV
        else
          echo "DIFF_MD_EXISTS=false" >> $GITHUB_ENV
        fi

    # Read markdown file content only if it exists
    - name: Read markdown file content
      if: env.DIFF_MD_EXISTS == 'true'
      run: |
        echo "CONTENT<<EOF" >> $GITHUB_ENV
        cat src/ontology/reports/difference_md.md >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # Post or update comment on pull request only if markdown file exists
    - name: Post or update comment on pull request
      if: env.DIFF_MD_EXISTS == 'true'
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const content = process.env.CONTENT;
          const { owner, repo } = context.repo;
          const { number } = context.issue;
          const existingComments = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number: number
          });
          const existingComment = existingComments.data.find(comment => comment.user.login === 'github-actions[bot]');
          if (existingComment) {
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: existingComment.id,
              body: content
            });
          } else {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: content
            });
          }
